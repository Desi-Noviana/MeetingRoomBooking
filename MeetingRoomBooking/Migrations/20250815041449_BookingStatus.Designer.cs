// <auto-generated />
using System;
using MeetingRoomBooking.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MeetingRoomBooking.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250815041449_BookingStatus")]
    partial class BookingStatus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MeetingRoomBooking.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Attendees")
                        .HasColumnType("int");

                    b.Property<string>("CancellationCode")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("MeetingTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("RecurrenceGroupId")
                        .HasColumnType("char(36)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("BookingId")
                        .IsUnique();

                    b.HasIndex("CancellationCode")
                        .IsUnique();

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RoomId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            BookingId = 1,
                            Attendees = 8,
                            CancellationCode = "262c0408-958a-4b33-b0aa-11c5a19ed6f8",
                            Description = "Large conference room with projector and video conferencing equipment.",
                            EmployeeId = 1,
                            EndTime = new DateTime(2025, 8, 15, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCancelled = false,
                            MeetingTitle = "Weekly Marketing Sync",
                            RecurrenceGroupId = new Guid("d3f1c9e2-8a5b-4f2a-bf3a-9c3e2d1a7e99"),
                            RoomId = 1,
                            StartTime = new DateTime(2025, 8, 15, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0
                        });
                });

            modelBuilder.Entity("MeetingRoomBooking.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Id", "Email")
                        .IsUnique();

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "desi@example.com",
                            EmployeeName = "Desi"
                        },
                        new
                        {
                            Id = 2,
                            Email = "raka@example.com",
                            EmployeeName = "Raka"
                        },
                        new
                        {
                            Id = 3,
                            Email = "george@example.com",
                            EmployeeName = "George"
                        });
                });

            modelBuilder.Entity("MeetingRoomBooking.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Amenities")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("RoomId");

                    b.HasIndex("RoomId")
                        .IsUnique();

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            Amenities = "Computer",
                            Capacity = 20,
                            Description = "Large conference room with projector and video conferencing equipment.",
                            RoomName = "Conference Room A"
                        },
                        new
                        {
                            RoomId = 2,
                            Amenities = "Computer",
                            Capacity = 10,
                            Description = "Medium-sized meeting room for team discussions.",
                            RoomName = "Conference Room B"
                        });
                });

            modelBuilder.Entity("MeetingRoomBooking.Models.Booking", b =>
                {
                    b.HasOne("MeetingRoomBooking.Models.Employee", "Employee")
                        .WithMany("Bookings")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MeetingRoomBooking.Models.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("MeetingRoomBooking.Models.Employee", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("MeetingRoomBooking.Models.Room", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
